# Generated by Django 4.2.4 on 2023-11-17 10:47

from django.db import migrations, models
import transport_subscription_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('registered', 'Зарегистрирован'), ('moderating', 'Проверяется'), ('approved', 'Принято'), ('denied', 'Отказано'), ('deleted', 'Удалено')], max_length=255, null=True)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('approving_date', models.DateField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'application',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'application_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=50)),
                ('status', models.CharField(choices=[('enabled', 'enabled'), ('deleted', 'deleted')], default='enabled', max_length=255)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=50)),
                ('price', models.IntegerField(default=0)),
                ('info', models.TextField(default='')),
                ('src', models.TextField(default='')),
                ('status', models.CharField(choices=[('enabled', 'enabled'), ('deleted', 'deleted')], max_length=255)),
            ],
            options={
                'db_table': 'subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email адрес')),
                ('password', models.CharField(max_length=50, verbose_name='Пароль')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли пользователь менеджером?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Является ли пользователь админом?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'managed': True,
            },
            managers=[
                ('objects', transport_subscription_app.models.NewUserManager()),
            ],
        ),
    ]
